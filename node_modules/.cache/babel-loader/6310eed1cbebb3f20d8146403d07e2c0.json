{"ast":null,"code":"var _jsxFileName = \"/Users/YOUSEF/development-workspace/MERN-1/react-app/src/components/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from './InfoBar';\nimport Input from './Input';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      alert(error);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) socket.emit('sendMessage', message, () => setMessage(''));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/YOUSEF/development-workspace/MERN-1/react-app/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","off","on","sendMessage","event","preventDefault","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMiB,QAAQ,GAAG,gBAAjB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEQ,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBT,WAAW,CAACgB,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAvB;AAEAb,IAAAA,MAAM,GAAGH,EAAE,CAACc,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCU,KAAD,IAAW;AAC7CC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD,KAFD;AAIA,WAAO,MAAM;AACXf,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACiB,GAAP;AACD,KAHD;AAID,GAhBQ,EAgBN,CAACN,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAhBM,CAAT;AAkBAlB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAsBX,OAAD,IAAa;AAChCG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAMA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAId,OAAJ,EAAaP,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACd,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEH,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEE,OADT;AAEE,IAAA,QAAQ,EAAGa,KAAD,IAAWZ,UAAU,CAACY,KAAK,CAACE,MAAN,CAAaC,KAAd,CAFjC;AAGE,IAAA,UAAU,EAAGH,KAAD,IACVA,KAAK,CAACI,GAAN,KAAc,OAAd,GAAwBL,WAAW,CAACC,KAAD,CAAnC,GAA6C,IAJjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAYD,CAhDD;;AAkDA,eAAenB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport InfoBar from './InfoBar';\nimport Input from './Input';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n\n    socket = io(ENDPOINT);\n\n    setName(name);\n    setRoom(room);\n\n    socket.emit('join', { name, room }, (error) => {\n      alert(error);\n    });\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    if (message) socket.emit('sendMessage', message, () => setMessage(''));\n  };\n\n  return (\n    <div>\n      <InfoBar room={room} />\n      <Input\n        value={message}\n        onChange={(event) => setMessage(event.target.value)}\n        onKeyPress={(event) =>\n          event.key === 'Enter' ? sendMessage(event) : null\n        }\n      />\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}