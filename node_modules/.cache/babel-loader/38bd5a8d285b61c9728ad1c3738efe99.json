{"ast":null,"code":"var _jsxFileName = \"/Users/YOUSEF/development-workspace/MERN-1/react-app/src/components/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from './InfoBar';\nimport Input from './Input';\nimport Messages from './Messages';\nlet socket;\n\nconst Chat = props => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = '192.168.0.125:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(props.location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      alert(error);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, props.location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) socket.emit('sendMessage', message, () => setMessage(''));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/YOUSEF/development-workspace/MERN-1/react-app/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","socket","Chat","props","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","location","search","emit","error","alert","off","on","sendMessage","event","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMkB,QAAQ,GAAG,oBAAjB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAES,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBV,WAAW,CAACiB,KAAZ,CAAkBV,KAAK,CAACW,QAAN,CAAeC,MAAjC,CAAvB;AAEAd,IAAAA,MAAM,GAAGJ,EAAE,CAACe,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAAEZ,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCW,KAAD,IAAW;AAC7CC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD,KAFD;AAIA,WAAO,MAAM;AACXhB,MAAAA,MAAM,CAACe,IAAP,CAAY,YAAZ;AACAf,MAAAA,MAAM,CAACkB,GAAP;AACD,KAHD;AAID,GAhBQ,EAgBN,CAACP,QAAD,EAAWT,KAAK,CAACW,QAAN,CAAeC,MAA1B,CAhBM,CAAT;AAkBApB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAsBZ,OAAD,IAAa;AAChCG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAMA,QAAMW,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIf,OAAJ,EAAaP,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2BR,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACd,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEH,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEI,QAApB;AAA8B,IAAA,IAAI,EAAEN,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEI,OADX;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,WAAW,EAAEY,WAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAWD,CA/CD;;AAiDA,eAAenB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport InfoBar from './InfoBar';\nimport Input from './Input';\nimport Messages from './Messages';\n\nlet socket;\n\nconst Chat = (props) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = '192.168.0.125:5000';\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(props.location.search);\n\n    socket = io(ENDPOINT);\n\n    setName(name);\n    setRoom(room);\n\n    socket.emit('join', { name, room }, (error) => {\n      alert(error);\n    });\n\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, props.location.search]);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    if (message) socket.emit('sendMessage', message, () => setMessage(''));\n  };\n\n  return (\n    <div>\n      <InfoBar room={room} />\n      <Messages messages={messages} name={name} />\n      <Input\n        message={message}\n        setMessage={setMessage}\n        sendMessage={sendMessage}\n      />\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}